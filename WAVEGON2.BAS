REM Polygon Wave (Doppler effect)

USEVAR NX,NY,NZ,LX,LY,LZ
USEVAR X1,X2,Y1,Y2,Z1,Z2
USEVAR U1,U2,V1,V2,W1,W2

REM Light vector
LX#=1.0:LY#=1.0:LZ#=0
R#=SQRT#(LX#*LX#+LY#*LY#+LZ#*LZ#)
LX#=LX#/R#:LY#=LY#/R#:LZ#=LZ#/R#

A#=10:U=160:W=150:D=2:E=2:P#=-45
F#=0.033
K#=PI#*2/60:S#=SIN#(P#*PI#/180):C#=COS#(P#*PI#/180)

USEGRAPHIC 9
GCLS

REM Set color palette
FOR I=0 TO 63
 B=I*156/64+100
 PALETTE I+128,0,B,0:REM Front surface
 PALETTE I+192,B,B,B:REM Back surface
NEXT


FOR Z=W TO -W+E STEP -E
 FOR X=-U TO U STEP D

  IF X=-U THEN
   R#=SQRT#(FLOAT#(X*X+Z*Z))
   Y#=A#*SIN#(K#*R#-FLOAT#(X)*F#)
   U1#=FLOAT#(X)
   V1#=FLOAT#(Z)*S#+Y#*C#
   W1#=FLOAT#(Z)*C#-Y#*S#

   R#=SQRT#(FLOAT#(X*X+(Z-E)*(Z-E)))
   Y#=A#*SIN#(K#*R#-FLOAT#(X)*F#)
   U2#=FLOAT#(X)
   V2#=FLOAT#(Z-E)*S#+Y#*C#
   W2#=FLOAT#(Z-E)*C#-Y#*S#

  ELSE

   R#=SQRT#(FLOAT#(X*X+Z*Z))
   Y#=A#*SIN#(K#*R#-FLOAT#(X)*F#)
   X1#=FLOAT#(X)
   Y1#=FLOAT#(Z)*S#+Y#*C#
   Z1#=FLOAT#(Z)*C#-Y#*S#

   R#=SQRT#(FLOAT#(X*X+(Z-E)*(Z-E)))
   Y#=A#*SIN#(K#*R#-FLOAT#(X)*F#)
   X2#=FLOAT#(X)
   Y2#=FLOAT#(Z-E)*S#+Y#*C#
   Z2#=FLOAT#(Z-E)*C#-Y#*S#

   REM Draw quadrilateral (3D)
   REM (U1,V1,W1) (U2,V2,W2)
   REM (X1,Y1,Z1) (X2,Y2,Z2)

   GOSUB DRWPGN,U1#,V1#,W1#,U2#,V2#,W2#,X2#,Y2#,Z2#
   GOSUB DRWPGN,U1#,V1#,W1#,X2#,Y2#,Z2#,X1#,Y1#,Z1#

   U1#=X1#:V1#=Y1#:W1#=Z1#
   U2#=X2#:V2#=Y2#:W2#=Z2#

  ENDIF

 NEXT
NEXT
WHILE INKEY()=0:WEND
END

REM Draw Polygon (3D triangle)
LABEL DRWPGN
 USEVAR PX1,PX2,PX3,PY1,PY2,PY3,PZ1,PZ2,PZ3
 VAR S,C,B

 PX1#=ARGS#(1):PY1#=ARGS#(2):PZ1#=ARGS#(3)
 PX2#=ARGS#(4):PY2#=ARGS#(5):PZ2#=ARGS#(6)
 PX3#=ARGS#(7):PY3#=ARGS#(8):PZ3#=ARGS#(9)
 GOSUB NVECT,PX2#-PX1#,PY2#-PY1#,PZ2#-PZ1#,PX3#-PX1#,PY3#-PY1#,PZ3#-PZ1#

 S#=NX#*LX#+NY#*LY#+NZ#*LZ#
 IF NZ#<0 THEN S#=-S#

 REM Calculate brightness
 C=INT(S#*63):IF C<0 THEN C=0
 IF NZ#<=0 THEN
  REM Front surface
  C=C+128
 ELSE
  REM Back surface
  C=C+192
 ENDIF

 GOSUB DRWTRI,INT(PX1#)+160,INT(PY1#)+120,INT(PX2#)+160,INT(PY2#)+120,INT(PX3#)+160,INT(PY3#)+120,C
RETURN

REM Calculate normal vector
LABEL NVECT
VAR R
NX#=ARGS#(2)*ARGS#(6)-ARGS#(3)*ARGS#(5)
NY#=ARGS#(3)*ARGS#(4)-ARGS#(1)*ARGS#(6)
NZ#=ARGS#(1)*ARGS#(5)-ARGS#(2)*ARGS#(4)
R#=SQRT#(NX#*NX#+NY#*NY#+NZ#*NZ#)
NX#=NX#/R#:NY#=NY#/R#:NZ#=NZ#/R#
RETURN

REM Draw triangle (2D)
LABEL DRWTRI
 USEVAR TX1,TX2,TX3,TY1,TY2,TY3
 USEVAR TSX,TEX,TA1,TA2

 VAR X,Y,T
 TX1=(ARGS(1)+$8000)<<16:TY1=ARGS(2)
 TX2=(ARGS(3)+$8000)<<16:TY2=ARGS(4)
 TX3=(ARGS(5)+$8000)<<16:TY3=ARGS(6)
 IF TY1>TY2 THEN
  T=TX1:TX1=TX2:TX2=T
  T=TY1:TY1=TY2:TY2=T
 ENDIF
 IF TY1>TY3 THEN
  T=TX1:TX1=TX3:TX3=T
  T=TY1:TY1=TY3:TY3=T
 ENDIF
 IF TY2>TY3 THEN
  T=TX2:TX2=TX3:TX3=T
  T=TY2:TY2=TY3:TY3=T
 ENDIF
 IF TY1=TY3 THEN RETURN
 TEX=TX1
 TA2=(TX3-TX1)/(TY3-TY1)
 IF TY1!=TY2 THEN
  TSX=TX1:TA1=(TX2-TX1)/(TY2-TY1)
 ENDIF
 FOR Y=TY1 TO TY3
  IF Y=TY2 AND TY3!=TY2 THEN
   TSX=TX2:TA1=(TX3-TX2)/(TY3-TY2)
  ENDIF
  LINE (TSX>>16)-$8000,Y,(TEX>>16)-$8000,Y,ARGS(7)
  TSX=TSX+TA1:TEX=TEX+TA2
 NEXT
RETURN
